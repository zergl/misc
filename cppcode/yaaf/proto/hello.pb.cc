// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/hello.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/hello.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace helloworld {

namespace {

const ::google::protobuf::Descriptor* DataPkg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataPkg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fhello_2eproto() {
  protobuf_AddDesc_proto_2fhello_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/hello.proto");
  GOOGLE_CHECK(file != NULL);
  DataPkg_descriptor_ = file->message_type(0);
  static const int DataPkg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPkg, type__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPkg, data__),
  };
  DataPkg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataPkg_descriptor_,
      DataPkg::default_instance_,
      DataPkg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPkg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPkg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataPkg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fhello_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataPkg_descriptor_, &DataPkg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fhello_2eproto() {
  delete DataPkg::default_instance_;
  delete DataPkg_reflection_;
}

void protobuf_AddDesc_proto_2fhello_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021proto/hello.proto\022\nhelloworld\"\'\n\007DataP"
    "kg\022\r\n\005type_\030\001 \002(\t\022\r\n\005data_\030\002 \002(\014", 72);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/hello.proto", &protobuf_RegisterTypes);
  DataPkg::default_instance_ = new DataPkg();
  DataPkg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fhello_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fhello_2eproto {
  StaticDescriptorInitializer_proto_2fhello_2eproto() {
    protobuf_AddDesc_proto_2fhello_2eproto();
  }
} static_descriptor_initializer_proto_2fhello_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DataPkg::kTypeFieldNumber;
const int DataPkg::kDataFieldNumber;
#endif  // !_MSC_VER

DataPkg::DataPkg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.DataPkg)
}

void DataPkg::InitAsDefaultInstance() {
}

DataPkg::DataPkg(const DataPkg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.DataPkg)
}

void DataPkg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataPkg::~DataPkg() {
  // @@protoc_insertion_point(destructor:helloworld.DataPkg)
  SharedDtor();
}

void DataPkg::SharedDtor() {
  if (type__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type__;
  }
  if (data__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data__;
  }
  if (this != default_instance_) {
  }
}

void DataPkg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataPkg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataPkg_descriptor_;
}

const DataPkg& DataPkg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fhello_2eproto();
  return *default_instance_;
}

DataPkg* DataPkg::default_instance_ = NULL;

DataPkg* DataPkg::New() const {
  return new DataPkg;
}

void DataPkg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_type_()) {
      if (type__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type__->clear();
      }
    }
    if (has_data_()) {
      if (data__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data__->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataPkg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.DataPkg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type_");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data_;
        break;
      }

      // required bytes data_ = 2;
      case 2: {
        if (tag == 18) {
         parse_data_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.DataPkg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.DataPkg)
  return false;
#undef DO_
}

void DataPkg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.DataPkg)
  // required string type_ = 1;
  if (has_type_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // required bytes data_ = 2;
  if (has_data_()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data_(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:helloworld.DataPkg)
}

::google::protobuf::uint8* DataPkg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.DataPkg)
  // required string type_ = 1;
  if (has_type_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type_(), target);
  }

  // required bytes data_ = 2;
  if (has_data_()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data_(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.DataPkg)
  return target;
}

int DataPkg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type_ = 1;
    if (has_type_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type_());
    }

    // required bytes data_ = 2;
    if (has_data_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data_());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataPkg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataPkg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataPkg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataPkg::MergeFrom(const DataPkg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_()) {
      set_type_(from.type_());
    }
    if (from.has_data_()) {
      set_data_(from.data_());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataPkg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPkg::CopyFrom(const DataPkg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPkg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DataPkg::Swap(DataPkg* other) {
  if (other != this) {
    std::swap(type__, other->type__);
    std::swap(data__, other->data__);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataPkg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataPkg_descriptor_;
  metadata.reflection = DataPkg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)
